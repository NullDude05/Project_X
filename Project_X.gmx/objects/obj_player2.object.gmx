<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Convars
ground = true;
isStep = false;
stepTimer = 0;
vel = 0;
initStep = true;

//Physics variables
jumpSpeed = 4.75;
walkSpeed = 5;
grav = 0.25;
maxVspeed = 7;
stepSpeed = 1/7;
stepFrames = 7;
vspeed = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Grounded
if place_meeting(x, y+vspeed+1, par_wall)
    ground = true;
else
    ground = false;

//Movement
if ground == true
{
if keyboard_check(vk_right) &amp;&amp; !place_meeting(x+vel+1, y, par_wall)
{
    
    if initStep == true
    {
    initStep = false; 
    isStep = true;
    image_xscale = 1;
    }
    else if isStep == false
    {
    image_xscale = 1;
    image_speed = 0.15;
    vel = walkSpeed;
    sprite_index = spr_player_walk;
    }
}
else if keyboard_check(vk_left) &amp;&amp; !place_meeting(x+vel-1, y, par_wall)
{   
    if initStep == true
    {
    image_xscale = -1;
    initStep = false; 
    isStep = true;
    }
    else if isStep == false
    {
    image_xscale = -1;
    image_speed = 0.15;
    vel = -walkSpeed;
    sprite_index = spr_player_walk;
    }
}
else if isStep == false
{
    stepTimer =0; 
    vel = 0;
    sprite_index = spr_player;
    initStep = true;
}

//SideStepping
if isStep == true
{
    vel = image_xscale * stepSpeed;
    sprite_index = spr_player_walk;
    
    stepTimer += 1;
    if stepTimer &gt;= stepFrames
    {
        stepTimer = 0;
        isStep = false;
    }
}
else
{
    sprite_index = spr_jump;  
    initStep = false;
    stepTimer = 0;
    isStep = false;

    if keyboard_check(vk_right) &amp;&amp; !place_meeting(x+vel+1, y, par_wall)
    {
        vel = moveSpeed;
        image_xscale = 1;
    }
    else if keyboard_check(vk_left) &amp;&amp; !place_meeting(x+vel-1, y, par_wall)
    {
        vel = - movespeed;
        image_xscale = -1;
    }
    else
    {
        vel = 0;
    }
    
}
}

//Allow Movement
x += vel;



//Gravity
if ground == true
    gravity = 0;
else 
{
    gravity = grav;
    if vspeed &gt; maxVspeed
        vspeed = maxVspeed;
}

//Jump
if ground == true &amp;&amp; keyboard_check_pressed(ord('Z'))
{
    vspeed = -jumpspeed;
    sprite_index = spr_jump;
    ground = false;
}






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction, 12);
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawSelf();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
